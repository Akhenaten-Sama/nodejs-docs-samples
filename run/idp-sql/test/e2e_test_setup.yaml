steps:

- id: 'Add a Secret to Secret Manager'
  name: 'gcr.io/cloud-builders/gcloud'
  entrypoint: '/bin/bash'
  args:
    - '-c'
    - |
      sed -i "s/PROJECT_ID/$PROJECT_ID/" postgres-secrets.json
      gcloud secrets create ${_SERVICE}-secrets \
        --replication-policy="automatic" \
        --data-file=postgres-secrets.json || echo "Secret already exists."

- id: 'Build Container Image'
  name: 'gcr.io/cloud-builders/docker'
  args: ['build', '-t', 'gcr.io/${PROJECT_ID}/${_SERVICE}', '.']

- id: 'Push Container Image'
  name: 'gcr.io/cloud-builders/docker'
  args: ['push', 'gcr.io/${PROJECT_ID}/${_SERVICE}']

- id: 'Deploy to Cloud Run'
  name: 'gcr.io/cloud-builders/gcloud:latest'
  entrypoint: /bin/bash
  args:
  - '-c'
  - |
    gcloud run deploy ${_SERVICE} \
      --image gcr.io/${PROJECT_ID}/${_SERVICE} \
      --region ${_REGION} \
      --platform managed \
      --add-cloudsql-instances ${_CLOUD_SQL_CONNECTION_NAME} \
      --update-env-vars CLOUD_SQL_CREDENTIALS_SECRET=projects/${PROJECT_ID}/secrets/${_SERVICE}-secrets/versions/latest

images:
- gcr.io/${PROJECT_ID}/${_SERVICE}

substitutions:
  _SERVICE: idp-sql
  _CLOUD_SQL_CONNECTION_NAME: $PROJECT_ID:us-central1:vote-sql-instance
  _REGION: us-central1
